Terminals unused in grammar

   T_INT
   T_VOID
   T_ADD


Grammar

    0 $accept: ROOT $end

    1 ROOT: Program

    2 Program: FunctionDeclaration

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block

    4 Block: T_CLBRACKET ReturnStatement T_CRBRACKET

    5 ReturnStatement: T_RETURN Expression T_SEMICOLON

    6 Expression: Term
    7           | Expression T_PLUS Term
    8           | Expression T_MINUS Term

    9 Term: Factor
   10     | Term T_TIMES Factor
   11     | Term T_DIVIDE Factor

   12 Factor: T_NUMBER
   13       | T_IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_TIMES (258) 10
T_DIVIDE (259) 11
T_PLUS (260) 7
T_MINUS (261) 8
T_LBRACKET (262) 3
T_RBRACKET (263) 3
T_CLBRACKET (264) 4
T_CRBRACKET (265) 4
T_SEMICOLON (266) 5
T_NUMBER (267) 12
T_IDENTIFIER (268) 3 13
T_RETURN (269) 5
T_TYPE (270) 3
T_INT (271)
T_VOID (272)
T_ADD (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
ROOT (20)
    on left: 1, on right: 0
Program (21)
    on left: 2, on right: 1
FunctionDeclaration (22)
    on left: 3, on right: 2
Block (23)
    on left: 4, on right: 3
ReturnStatement (24)
    on left: 5, on right: 4
Expression (25)
    on left: 6 7 8, on right: 5 7 8
Term (26)
    on left: 9 10 11, on right: 6 7 8 10 11
Factor (27)
    on left: 12 13, on right: 9 10 11


State 0

    0 $accept: . ROOT $end

    T_TYPE  shift, and go to state 1

    ROOT                 go to state 2
    Program              go to state 3
    FunctionDeclaration  go to state 4


State 1

    3 FunctionDeclaration: T_TYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET Block

    T_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 6


State 3

    1 ROOT: Program .

    $default  reduce using rule 1 (ROOT)


State 4

    2 Program: FunctionDeclaration .

    $default  reduce using rule 2 (Program)


State 5

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET Block

    T_LBRACKET  shift, and go to state 7


State 6

    0 $accept: ROOT $end .

    $default  accept


State 7

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET Block

    T_RBRACKET  shift, and go to state 8


State 8

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 9

    Block  go to state 10


State 9

    4 Block: T_CLBRACKET . ReturnStatement T_CRBRACKET

    T_RETURN  shift, and go to state 11

    ReturnStatement  go to state 12


State 10

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block .

    $default  reduce using rule 3 (FunctionDeclaration)


State 11

    5 ReturnStatement: T_RETURN . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 13
    T_IDENTIFIER  shift, and go to state 14

    Expression  go to state 15
    Term        go to state 16
    Factor      go to state 17


State 12

    4 Block: T_CLBRACKET ReturnStatement . T_CRBRACKET

    T_CRBRACKET  shift, and go to state 18


State 13

   12 Factor: T_NUMBER .

    $default  reduce using rule 12 (Factor)


State 14

   13 Factor: T_IDENTIFIER .

    $default  reduce using rule 13 (Factor)


State 15

    5 ReturnStatement: T_RETURN Expression . T_SEMICOLON
    7 Expression: Expression . T_PLUS Term
    8           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 19
    T_MINUS      shift, and go to state 20
    T_SEMICOLON  shift, and go to state 21


State 16

    6 Expression: Term .
   10 Term: Term . T_TIMES Factor
   11     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 22
    T_DIVIDE  shift, and go to state 23

    $default  reduce using rule 6 (Expression)


State 17

    9 Term: Factor .

    $default  reduce using rule 9 (Term)


State 18

    4 Block: T_CLBRACKET ReturnStatement T_CRBRACKET .

    $default  reduce using rule 4 (Block)


State 19

    7 Expression: Expression T_PLUS . Term

    T_NUMBER      shift, and go to state 13
    T_IDENTIFIER  shift, and go to state 14

    Term    go to state 24
    Factor  go to state 17


State 20

    8 Expression: Expression T_MINUS . Term

    T_NUMBER      shift, and go to state 13
    T_IDENTIFIER  shift, and go to state 14

    Term    go to state 25
    Factor  go to state 17


State 21

    5 ReturnStatement: T_RETURN Expression T_SEMICOLON .

    $default  reduce using rule 5 (ReturnStatement)


State 22

   10 Term: Term T_TIMES . Factor

    T_NUMBER      shift, and go to state 13
    T_IDENTIFIER  shift, and go to state 14

    Factor  go to state 26


State 23

   11 Term: Term T_DIVIDE . Factor

    T_NUMBER      shift, and go to state 13
    T_IDENTIFIER  shift, and go to state 14

    Factor  go to state 27


State 24

    7 Expression: Expression T_PLUS Term .
   10 Term: Term . T_TIMES Factor
   11     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 22
    T_DIVIDE  shift, and go to state 23

    $default  reduce using rule 7 (Expression)


State 25

    8 Expression: Expression T_MINUS Term .
   10 Term: Term . T_TIMES Factor
   11     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 22
    T_DIVIDE  shift, and go to state 23

    $default  reduce using rule 8 (Expression)


State 26

   10 Term: Term T_TIMES Factor .

    $default  reduce using rule 10 (Term)


State 27

   11 Term: Term T_DIVIDE Factor .

    $default  reduce using rule 11 (Term)
