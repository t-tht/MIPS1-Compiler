Nonterminals useless in grammar

   ParamVar


Terminals unused in grammar

   T_COMMA
   T_INT
   T_VOID
   T_ADD


Grammar

    0 $accept: ROOT $end

    1 ROOT: Program

    2 Program: VariableDeclaration
    3        | FunctionDeclaration
    4        | Program FunctionDeclaration

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block

    7 VariableDeclaration: T_TYPE T_IDENTIFIER T_SEMICOLON
    8                    | T_TYPE T_IDENTIFIER T_EQUALS Expression T_SEMICOLON

    9 Block: T_CLBRACKET ReturnStatement T_CRBRACKET

   10 ReturnStatement: T_RETURN Expression T_SEMICOLON

   11 Expression: Term
   12           | Expression T_PLUS Term
   13           | Expression T_MINUS Term

   14 Term: Factor
   15     | Term T_TIMES Factor
   16     | Term T_DIVIDE Factor

   17 Factor: T_NUMBER
   18       | T_IDENTIFIER
   19       | T_IDENTIFIER T_LBRACKET T_RBRACKET
   20       | T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET

   21 ParamRecur: Param

   22 Param: T_TYPE T_IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_TIMES (258) 15
T_DIVIDE (259) 16
T_PLUS (260) 12
T_MINUS (261) 13
T_LBRACKET (262) 5 6 19 20
T_RBRACKET (263) 5 6 19 20
T_CLBRACKET (264) 9
T_CRBRACKET (265) 9
T_SEMICOLON (266) 7 8 10
T_COMMA (267)
T_EQUALS (268) 8
T_NUMBER (269) 17
T_IDENTIFIER (270) 5 6 7 8 18 19 20 22
T_RETURN (271) 10
T_TYPE (272) 5 6 7 8 22
T_INT (273)
T_VOID (274)
T_ADD (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
ROOT (22)
    on left: 1, on right: 0
Program (23)
    on left: 2 3 4, on right: 1 4
FunctionDeclaration (24)
    on left: 5 6, on right: 3 4
VariableDeclaration (25)
    on left: 7 8, on right: 2
Block (26)
    on left: 9, on right: 5 6
ReturnStatement (27)
    on left: 10, on right: 9
Expression (28)
    on left: 11 12 13, on right: 8 10 12 13
Term (29)
    on left: 14 15 16, on right: 11 12 13 15 16
Factor (30)
    on left: 17 18 19 20, on right: 14 15 16
ParamRecur (31)
    on left: 21, on right: 20
Param (32)
    on left: 22, on right: 6 21


State 0

    0 $accept: . ROOT $end

    T_TYPE  shift, and go to state 1

    ROOT                 go to state 2
    Program              go to state 3
    FunctionDeclaration  go to state 4
    VariableDeclaration  go to state 5


State 1

    5 FunctionDeclaration: T_TYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE . T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block
    7 VariableDeclaration: T_TYPE . T_IDENTIFIER T_SEMICOLON
    8                    | T_TYPE . T_IDENTIFIER T_EQUALS Expression T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 7


State 3

    1 ROOT: Program .
    4 Program: Program . FunctionDeclaration

    T_TYPE  shift, and go to state 8

    $default  reduce using rule 1 (ROOT)

    FunctionDeclaration  go to state 9


State 4

    3 Program: FunctionDeclaration .

    $default  reduce using rule 3 (Program)


State 5

    2 Program: VariableDeclaration .

    $default  reduce using rule 2 (Program)


State 6

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER . T_LBRACKET Param T_RBRACKET Block
    7 VariableDeclaration: T_TYPE T_IDENTIFIER . T_SEMICOLON
    8                    | T_TYPE T_IDENTIFIER . T_EQUALS Expression T_SEMICOLON

    T_LBRACKET   shift, and go to state 10
    T_SEMICOLON  shift, and go to state 11
    T_EQUALS     shift, and go to state 12


State 7

    0 $accept: ROOT $end .

    $default  accept


State 8

    5 FunctionDeclaration: T_TYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE . T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block

    T_IDENTIFIER  shift, and go to state 13


State 9

    4 Program: Program FunctionDeclaration .

    $default  reduce using rule 4 (Program)


State 10

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER T_LBRACKET . Param T_RBRACKET Block

    T_RBRACKET  shift, and go to state 14
    T_TYPE      shift, and go to state 15

    Param  go to state 16


State 11

    7 VariableDeclaration: T_TYPE T_IDENTIFIER T_SEMICOLON .

    $default  reduce using rule 7 (VariableDeclaration)


State 12

    8 VariableDeclaration: T_TYPE T_IDENTIFIER T_EQUALS . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 17
    T_IDENTIFIER  shift, and go to state 18

    Expression  go to state 19
    Term        go to state 20
    Factor      go to state 21


State 13

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER . T_LBRACKET Param T_RBRACKET Block

    T_LBRACKET  shift, and go to state 10


State 14

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 22

    Block  go to state 23


State 15

   22 Param: T_TYPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 24


State 16

    6 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET Param . T_RBRACKET Block

    T_RBRACKET  shift, and go to state 25


State 17

   17 Factor: T_NUMBER .

    $default  reduce using rule 17 (Factor)


State 18

   18 Factor: T_IDENTIFIER .
   19       | T_IDENTIFIER . T_LBRACKET T_RBRACKET
   20       | T_IDENTIFIER . T_LBRACKET ParamRecur T_RBRACKET

    T_LBRACKET  shift, and go to state 26

    $default  reduce using rule 18 (Factor)


State 19

    8 VariableDeclaration: T_TYPE T_IDENTIFIER T_EQUALS Expression . T_SEMICOLON
   12 Expression: Expression . T_PLUS Term
   13           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 27
    T_MINUS      shift, and go to state 28
    T_SEMICOLON  shift, and go to state 29


State 20

   11 Expression: Term .
   15 Term: Term . T_TIMES Factor
   16     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 30
    T_DIVIDE  shift, and go to state 31

    $default  reduce using rule 11 (Expression)


State 21

   14 Term: Factor .

    $default  reduce using rule 14 (Term)


State 22

    9 Block: T_CLBRACKET . ReturnStatement T_CRBRACKET

    T_RETURN  shift, and go to state 32

    ReturnStatement  go to state 33


State 23

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block .

    $default  reduce using rule 5 (FunctionDeclaration)


State 24

   22 Param: T_TYPE T_IDENTIFIER .

    $default  reduce using rule 22 (Param)


State 25

    6 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET Param T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 22

    Block  go to state 34


State 26

   19 Factor: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   20       | T_IDENTIFIER T_LBRACKET . ParamRecur T_RBRACKET

    T_RBRACKET  shift, and go to state 35
    T_TYPE      shift, and go to state 15

    ParamRecur  go to state 36
    Param       go to state 37


State 27

   12 Expression: Expression T_PLUS . Term

    T_NUMBER      shift, and go to state 17
    T_IDENTIFIER  shift, and go to state 18

    Term    go to state 38
    Factor  go to state 21


State 28

   13 Expression: Expression T_MINUS . Term

    T_NUMBER      shift, and go to state 17
    T_IDENTIFIER  shift, and go to state 18

    Term    go to state 39
    Factor  go to state 21


State 29

    8 VariableDeclaration: T_TYPE T_IDENTIFIER T_EQUALS Expression T_SEMICOLON .

    $default  reduce using rule 8 (VariableDeclaration)


State 30

   15 Term: Term T_TIMES . Factor

    T_NUMBER      shift, and go to state 17
    T_IDENTIFIER  shift, and go to state 18

    Factor  go to state 40


State 31

   16 Term: Term T_DIVIDE . Factor

    T_NUMBER      shift, and go to state 17
    T_IDENTIFIER  shift, and go to state 18

    Factor  go to state 41


State 32

   10 ReturnStatement: T_RETURN . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 17
    T_IDENTIFIER  shift, and go to state 18

    Expression  go to state 42
    Term        go to state 20
    Factor      go to state 21


State 33

    9 Block: T_CLBRACKET ReturnStatement . T_CRBRACKET

    T_CRBRACKET  shift, and go to state 43


State 34

    6 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block .

    $default  reduce using rule 6 (FunctionDeclaration)


State 35

   19 Factor: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 19 (Factor)


State 36

   20 Factor: T_IDENTIFIER T_LBRACKET ParamRecur . T_RBRACKET

    T_RBRACKET  shift, and go to state 44


State 37

   21 ParamRecur: Param .

    $default  reduce using rule 21 (ParamRecur)


State 38

   12 Expression: Expression T_PLUS Term .
   15 Term: Term . T_TIMES Factor
   16     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 30
    T_DIVIDE  shift, and go to state 31

    $default  reduce using rule 12 (Expression)


State 39

   13 Expression: Expression T_MINUS Term .
   15 Term: Term . T_TIMES Factor
   16     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 30
    T_DIVIDE  shift, and go to state 31

    $default  reduce using rule 13 (Expression)


State 40

   15 Term: Term T_TIMES Factor .

    $default  reduce using rule 15 (Term)


State 41

   16 Term: Term T_DIVIDE Factor .

    $default  reduce using rule 16 (Term)


State 42

   10 ReturnStatement: T_RETURN Expression . T_SEMICOLON
   12 Expression: Expression . T_PLUS Term
   13           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 27
    T_MINUS      shift, and go to state 28
    T_SEMICOLON  shift, and go to state 45


State 43

    9 Block: T_CLBRACKET ReturnStatement T_CRBRACKET .

    $default  reduce using rule 9 (Block)


State 44

   20 Factor: T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET .

    $default  reduce using rule 20 (Factor)


State 45

   10 ReturnStatement: T_RETURN Expression T_SEMICOLON .

    $default  reduce using rule 10 (ReturnStatement)
