Nonterminals useless in grammar

   TYPE


Terminals unused in grammar

   T_INT
   T_VOID


Rules useless in grammar

   14 TYPE: T_INT
   15     | T_VOID


Grammar

    0 $accept: ROOT $end

    1 ROOT: Program

    2 Program: FunctionDeclaration

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block

    4 Statement: CompoundStatement
    5          | SimpleStatement

    6 CompoundStatement: Block

    7 SimpleStatement: ReturnStatement

    8 Block: T_CLBRACKET T_CRBRACKET
    9      | T_CLBRACKET Statement T_CRBRACKET

   10 ReturnStatement: T_RETURN Expr T_SEMICOLON

   11 Expr: Bin_Expr

   12 Bin_Expr: T_NUMBER
   13         | T_NUMBER T_ADD T_NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_LBRACKET (258) 3
T_RBRACKET (259) 3
T_CLBRACKET (260) 8 9
T_CRBRACKET (261) 8 9
T_SEMICOLON (262) 10
T_NUMBER (263) 12 13
T_IDENTIFIER (264) 3
T_RETURN (265) 10
T_TYPE (266) 3
T_INT (267)
T_VOID (268)
T_ADD (269) 13


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
ROOT (16)
    on left: 1, on right: 0
Program (17)
    on left: 2, on right: 1
FunctionDeclaration (18)
    on left: 3, on right: 2
Statement (19)
    on left: 4 5, on right: 9
CompoundStatement (20)
    on left: 6, on right: 4
SimpleStatement (21)
    on left: 7, on right: 5
Block (22)
    on left: 8 9, on right: 3 6
ReturnStatement (23)
    on left: 10, on right: 7
Expr (24)
    on left: 11, on right: 10
Bin_Expr (25)
    on left: 12 13, on right: 11


State 0

    0 $accept: . ROOT $end

    T_TYPE  shift, and go to state 1

    ROOT                 go to state 2
    Program              go to state 3
    FunctionDeclaration  go to state 4


State 1

    3 FunctionDeclaration: T_TYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET Block

    T_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 6


State 3

    1 ROOT: Program .

    $default  reduce using rule 1 (ROOT)


State 4

    2 Program: FunctionDeclaration .

    $default  reduce using rule 2 (Program)


State 5

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET Block

    T_LBRACKET  shift, and go to state 7


State 6

    0 $accept: ROOT $end .

    $default  accept


State 7

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET Block

    T_RBRACKET  shift, and go to state 8


State 8

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 9

    Block  go to state 10


State 9

    8 Block: T_CLBRACKET . T_CRBRACKET
    9      | T_CLBRACKET . Statement T_CRBRACKET

    T_CLBRACKET  shift, and go to state 9
    T_CRBRACKET  shift, and go to state 11
    T_RETURN     shift, and go to state 12

    Statement          go to state 13
    CompoundStatement  go to state 14
    SimpleStatement    go to state 15
    Block              go to state 16
    ReturnStatement    go to state 17


State 10

    3 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block .

    $default  reduce using rule 3 (FunctionDeclaration)


State 11

    8 Block: T_CLBRACKET T_CRBRACKET .

    $default  reduce using rule 8 (Block)


State 12

   10 ReturnStatement: T_RETURN . Expr T_SEMICOLON

    T_NUMBER  shift, and go to state 18

    Expr      go to state 19
    Bin_Expr  go to state 20


State 13

    9 Block: T_CLBRACKET Statement . T_CRBRACKET

    T_CRBRACKET  shift, and go to state 21


State 14

    4 Statement: CompoundStatement .

    $default  reduce using rule 4 (Statement)


State 15

    5 Statement: SimpleStatement .

    $default  reduce using rule 5 (Statement)


State 16

    6 CompoundStatement: Block .

    $default  reduce using rule 6 (CompoundStatement)


State 17

    7 SimpleStatement: ReturnStatement .

    $default  reduce using rule 7 (SimpleStatement)


State 18

   12 Bin_Expr: T_NUMBER .
   13         | T_NUMBER . T_ADD T_NUMBER

    T_ADD  shift, and go to state 22

    $default  reduce using rule 12 (Bin_Expr)


State 19

   10 ReturnStatement: T_RETURN Expr . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 23


State 20

   11 Expr: Bin_Expr .

    $default  reduce using rule 11 (Expr)


State 21

    9 Block: T_CLBRACKET Statement T_CRBRACKET .

    $default  reduce using rule 9 (Block)


State 22

   13 Bin_Expr: T_NUMBER T_ADD . T_NUMBER

    T_NUMBER  shift, and go to state 24


State 23

   10 ReturnStatement: T_RETURN Expr T_SEMICOLON .

    $default  reduce using rule 10 (ReturnStatement)


State 24

   13 Bin_Expr: T_NUMBER T_ADD T_NUMBER .

    $default  reduce using rule 13 (Bin_Expr)
