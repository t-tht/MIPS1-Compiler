Terminals unused in grammar

   T_INT
   T_VOID
   T_ADD


Grammar

    0 $accept: ROOT $end

    1 ROOT: Program

    2 Program: FunctionDeclaration
    3        | Program FunctionDeclaration

    4 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block

    5 Block: T_CLBRACKET ReturnStatement T_CRBRACKET

    6 ReturnStatement: T_RETURN Expression T_SEMICOLON

    7 Expression: Term
    8           | Expression T_PLUS Term
    9           | Expression T_MINUS Term

   10 Term: Factor
   11     | Term T_TIMES Factor
   12     | Term T_DIVIDE Factor

   13 Factor: T_NUMBER
   14       | T_IDENTIFIER
   15       | T_IDENTIFIER T_LBRACKET T_RBRACKET
   16       | T_IDENTIFIER T_LBRACKET Param T_RBRACKET

   17 Param: ParamDec
   18      | Param T_COMMA ParamDec

   19 ParamDec: T_NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_TIMES (258) 11
T_DIVIDE (259) 12
T_PLUS (260) 8
T_MINUS (261) 9
T_LBRACKET (262) 4 15 16
T_RBRACKET (263) 4 15 16
T_CLBRACKET (264) 5
T_CRBRACKET (265) 5
T_SEMICOLON (266) 6
T_COMMA (267) 18
T_NUMBER (268) 13 19
T_IDENTIFIER (269) 4 14 15 16
T_RETURN (270) 6
T_TYPE (271) 4
T_INT (272)
T_VOID (273)
T_ADD (274)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
ROOT (21)
    on left: 1, on right: 0
Program (22)
    on left: 2 3, on right: 1 3
FunctionDeclaration (23)
    on left: 4, on right: 2 3
Block (24)
    on left: 5, on right: 4
ReturnStatement (25)
    on left: 6, on right: 5
Expression (26)
    on left: 7 8 9, on right: 6 8 9
Term (27)
    on left: 10 11 12, on right: 7 8 9 11 12
Factor (28)
    on left: 13 14 15 16, on right: 10 11 12
Param (29)
    on left: 17 18, on right: 16 18
ParamDec (30)
    on left: 19, on right: 17 18


State 0

    0 $accept: . ROOT $end

    T_TYPE  shift, and go to state 1

    ROOT                 go to state 2
    Program              go to state 3
    FunctionDeclaration  go to state 4


State 1

    4 FunctionDeclaration: T_TYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET Block

    T_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 6


State 3

    1 ROOT: Program .
    3 Program: Program . FunctionDeclaration

    T_TYPE  shift, and go to state 1

    $default  reduce using rule 1 (ROOT)

    FunctionDeclaration  go to state 7


State 4

    2 Program: FunctionDeclaration .

    $default  reduce using rule 2 (Program)


State 5

    4 FunctionDeclaration: T_TYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET Block

    T_LBRACKET  shift, and go to state 8


State 6

    0 $accept: ROOT $end .

    $default  accept


State 7

    3 Program: Program FunctionDeclaration .

    $default  reduce using rule 3 (Program)


State 8

    4 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET Block

    T_RBRACKET  shift, and go to state 9


State 9

    4 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 10

    Block  go to state 11


State 10

    5 Block: T_CLBRACKET . ReturnStatement T_CRBRACKET

    T_RETURN  shift, and go to state 12

    ReturnStatement  go to state 13


State 11

    4 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block .

    $default  reduce using rule 4 (FunctionDeclaration)


State 12

    6 ReturnStatement: T_RETURN . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 14
    T_IDENTIFIER  shift, and go to state 15

    Expression  go to state 16
    Term        go to state 17
    Factor      go to state 18


State 13

    5 Block: T_CLBRACKET ReturnStatement . T_CRBRACKET

    T_CRBRACKET  shift, and go to state 19


State 14

   13 Factor: T_NUMBER .

    $default  reduce using rule 13 (Factor)


State 15

   14 Factor: T_IDENTIFIER .
   15       | T_IDENTIFIER . T_LBRACKET T_RBRACKET
   16       | T_IDENTIFIER . T_LBRACKET Param T_RBRACKET

    T_LBRACKET  shift, and go to state 20

    $default  reduce using rule 14 (Factor)


State 16

    6 ReturnStatement: T_RETURN Expression . T_SEMICOLON
    8 Expression: Expression . T_PLUS Term
    9           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 21
    T_MINUS      shift, and go to state 22
    T_SEMICOLON  shift, and go to state 23


State 17

    7 Expression: Term .
   11 Term: Term . T_TIMES Factor
   12     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 24
    T_DIVIDE  shift, and go to state 25

    $default  reduce using rule 7 (Expression)


State 18

   10 Term: Factor .

    $default  reduce using rule 10 (Term)


State 19

    5 Block: T_CLBRACKET ReturnStatement T_CRBRACKET .

    $default  reduce using rule 5 (Block)


State 20

   15 Factor: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   16       | T_IDENTIFIER T_LBRACKET . Param T_RBRACKET

    T_RBRACKET  shift, and go to state 26
    T_NUMBER    shift, and go to state 27

    Param     go to state 28
    ParamDec  go to state 29


State 21

    8 Expression: Expression T_PLUS . Term

    T_NUMBER      shift, and go to state 14
    T_IDENTIFIER  shift, and go to state 15

    Term    go to state 30
    Factor  go to state 18


State 22

    9 Expression: Expression T_MINUS . Term

    T_NUMBER      shift, and go to state 14
    T_IDENTIFIER  shift, and go to state 15

    Term    go to state 31
    Factor  go to state 18


State 23

    6 ReturnStatement: T_RETURN Expression T_SEMICOLON .

    $default  reduce using rule 6 (ReturnStatement)


State 24

   11 Term: Term T_TIMES . Factor

    T_NUMBER      shift, and go to state 14
    T_IDENTIFIER  shift, and go to state 15

    Factor  go to state 32


State 25

   12 Term: Term T_DIVIDE . Factor

    T_NUMBER      shift, and go to state 14
    T_IDENTIFIER  shift, and go to state 15

    Factor  go to state 33


State 26

   15 Factor: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 15 (Factor)


State 27

   19 ParamDec: T_NUMBER .

    $default  reduce using rule 19 (ParamDec)


State 28

   16 Factor: T_IDENTIFIER T_LBRACKET Param . T_RBRACKET
   18 Param: Param . T_COMMA ParamDec

    T_RBRACKET  shift, and go to state 34
    T_COMMA     shift, and go to state 35


State 29

   17 Param: ParamDec .

    $default  reduce using rule 17 (Param)


State 30

    8 Expression: Expression T_PLUS Term .
   11 Term: Term . T_TIMES Factor
   12     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 24
    T_DIVIDE  shift, and go to state 25

    $default  reduce using rule 8 (Expression)


State 31

    9 Expression: Expression T_MINUS Term .
   11 Term: Term . T_TIMES Factor
   12     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 24
    T_DIVIDE  shift, and go to state 25

    $default  reduce using rule 9 (Expression)


State 32

   11 Term: Term T_TIMES Factor .

    $default  reduce using rule 11 (Term)


State 33

   12 Term: Term T_DIVIDE Factor .

    $default  reduce using rule 12 (Term)


State 34

   16 Factor: T_IDENTIFIER T_LBRACKET Param T_RBRACKET .

    $default  reduce using rule 16 (Factor)


State 35

   18 Param: Param T_COMMA . ParamDec

    T_NUMBER  shift, and go to state 27

    ParamDec  go to state 36


State 36

   18 Param: Param T_COMMA ParamDec .

    $default  reduce using rule 18 (Param)
