Terminals unused in grammar

   T_ADD


Grammar

    0 $accept: ROOT $end

    1 ROOT: Program

    2 Program: FunctionDeclaration
    3        | Program FunctionDeclaration
    4        | VariableDeclaration

    5 FunctionDeclaration: Type T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | Type T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block

    7 VariableDeclaration: Type T_IDENTIFIER T_SEMICOLON
    8                    | Type T_IDENTIFIER T_EQUALS Expression T_SEMICOLON

    9 Block: T_CLBRACKET BlockList T_CRBRACKET

   10 BlockList: ReturnStatement

   11 ReturnStatement: T_RETURN Expression T_SEMICOLON

   12 Expression: Term
   13           | Expression T_PLUS Term
   14           | Expression T_MINUS Term

   15 Term: Factor
   16     | Term T_TIMES Factor
   17     | Term T_DIVIDE Factor

   18 Factor: T_NUMBER
   19       | T_IDENTIFIER
   20       | T_IDENTIFIER T_LBRACKET T_RBRACKET
   21       | T_IDENTIFIER T_LBRACKET Param T_RBRACKET

   22 Param: Type T_IDENTIFIER
   23      | Type T_IDENTIFIER T_COMMA Param

   24 Type: T_INT
   25     | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_TIMES (258) 16
T_DIVIDE (259) 17
T_PLUS (260) 13
T_MINUS (261) 14
T_LBRACKET (262) 5 6 20 21
T_RBRACKET (263) 5 6 20 21
T_CLBRACKET (264) 9
T_CRBRACKET (265) 9
T_SEMICOLON (266) 7 8 11
T_COMMA (267) 23
T_EQUALS (268) 8
T_NUMBER (269) 18
T_IDENTIFIER (270) 5 6 7 8 19 20 21 22 23
T_RETURN (271) 11
T_INT (272) 24
T_ADD (273)
T_VOID (274) 25


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
ROOT (21)
    on left: 1, on right: 0
Program (22)
    on left: 2 3 4, on right: 1 3
FunctionDeclaration (23)
    on left: 5 6, on right: 2 3
VariableDeclaration (24)
    on left: 7 8, on right: 4
Block (25)
    on left: 9, on right: 5 6
BlockList (26)
    on left: 10, on right: 9
ReturnStatement (27)
    on left: 11, on right: 10
Expression (28)
    on left: 12 13 14, on right: 8 11 13 14
Term (29)
    on left: 15 16 17, on right: 12 13 14 16 17
Factor (30)
    on left: 18 19 20 21, on right: 15 16 17
Param (31)
    on left: 22 23, on right: 6 21 23
Type (32)
    on left: 24 25, on right: 5 6 7 8 22 23


State 0

    0 $accept: . ROOT $end

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    ROOT                 go to state 3
    Program              go to state 4
    FunctionDeclaration  go to state 5
    VariableDeclaration  go to state 6
    Type                 go to state 7


State 1

   24 Type: T_INT .

    $default  reduce using rule 24 (Type)


State 2

   25 Type: T_VOID .

    $default  reduce using rule 25 (Type)


State 3

    0 $accept: ROOT . $end

    $end  shift, and go to state 8


State 4

    1 ROOT: Program .
    3 Program: Program . FunctionDeclaration

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    $default  reduce using rule 1 (ROOT)

    FunctionDeclaration  go to state 9
    Type                 go to state 10


State 5

    2 Program: FunctionDeclaration .

    $default  reduce using rule 2 (Program)


State 6

    4 Program: VariableDeclaration .

    $default  reduce using rule 4 (Program)


State 7

    5 FunctionDeclaration: Type . T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | Type . T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block
    7 VariableDeclaration: Type . T_IDENTIFIER T_SEMICOLON
    8                    | Type . T_IDENTIFIER T_EQUALS Expression T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 11


State 8

    0 $accept: ROOT $end .

    $default  accept


State 9

    3 Program: Program FunctionDeclaration .

    $default  reduce using rule 3 (Program)


State 10

    5 FunctionDeclaration: Type . T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | Type . T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block

    T_IDENTIFIER  shift, and go to state 12


State 11

    5 FunctionDeclaration: Type T_IDENTIFIER . T_LBRACKET T_RBRACKET Block
    6                    | Type T_IDENTIFIER . T_LBRACKET Param T_RBRACKET Block
    7 VariableDeclaration: Type T_IDENTIFIER . T_SEMICOLON
    8                    | Type T_IDENTIFIER . T_EQUALS Expression T_SEMICOLON

    T_LBRACKET   shift, and go to state 13
    T_SEMICOLON  shift, and go to state 14
    T_EQUALS     shift, and go to state 15


State 12

    5 FunctionDeclaration: Type T_IDENTIFIER . T_LBRACKET T_RBRACKET Block
    6                    | Type T_IDENTIFIER . T_LBRACKET Param T_RBRACKET Block

    T_LBRACKET  shift, and go to state 13


State 13

    5 FunctionDeclaration: Type T_IDENTIFIER T_LBRACKET . T_RBRACKET Block
    6                    | Type T_IDENTIFIER T_LBRACKET . Param T_RBRACKET Block

    T_RBRACKET  shift, and go to state 16
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2

    Param  go to state 17
    Type   go to state 18


State 14

    7 VariableDeclaration: Type T_IDENTIFIER T_SEMICOLON .

    $default  reduce using rule 7 (VariableDeclaration)


State 15

    8 VariableDeclaration: Type T_IDENTIFIER T_EQUALS . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20

    Expression  go to state 21
    Term        go to state 22
    Factor      go to state 23


State 16

    5 FunctionDeclaration: Type T_IDENTIFIER T_LBRACKET T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 24

    Block  go to state 25


State 17

    6 FunctionDeclaration: Type T_IDENTIFIER T_LBRACKET Param . T_RBRACKET Block

    T_RBRACKET  shift, and go to state 26


State 18

   22 Param: Type . T_IDENTIFIER
   23      | Type . T_IDENTIFIER T_COMMA Param

    T_IDENTIFIER  shift, and go to state 27


State 19

   18 Factor: T_NUMBER .

    $default  reduce using rule 18 (Factor)


State 20

   19 Factor: T_IDENTIFIER .
   20       | T_IDENTIFIER . T_LBRACKET T_RBRACKET
   21       | T_IDENTIFIER . T_LBRACKET Param T_RBRACKET

    T_LBRACKET  shift, and go to state 28

    $default  reduce using rule 19 (Factor)


State 21

    8 VariableDeclaration: Type T_IDENTIFIER T_EQUALS Expression . T_SEMICOLON
   13 Expression: Expression . T_PLUS Term
   14           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 29
    T_MINUS      shift, and go to state 30
    T_SEMICOLON  shift, and go to state 31


State 22

   12 Expression: Term .
   16 Term: Term . T_TIMES Factor
   17     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 32
    T_DIVIDE  shift, and go to state 33

    $default  reduce using rule 12 (Expression)


State 23

   15 Term: Factor .

    $default  reduce using rule 15 (Term)


State 24

    9 Block: T_CLBRACKET . BlockList T_CRBRACKET

    T_RETURN  shift, and go to state 34

    BlockList        go to state 35
    ReturnStatement  go to state 36


State 25

    5 FunctionDeclaration: Type T_IDENTIFIER T_LBRACKET T_RBRACKET Block .

    $default  reduce using rule 5 (FunctionDeclaration)


State 26

    6 FunctionDeclaration: Type T_IDENTIFIER T_LBRACKET Param T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 24

    Block  go to state 37


State 27

   22 Param: Type T_IDENTIFIER .
   23      | Type T_IDENTIFIER . T_COMMA Param

    T_COMMA  shift, and go to state 38

    $default  reduce using rule 22 (Param)


State 28

   20 Factor: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   21       | T_IDENTIFIER T_LBRACKET . Param T_RBRACKET

    T_RBRACKET  shift, and go to state 39
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2

    Param  go to state 40
    Type   go to state 18


State 29

   13 Expression: Expression T_PLUS . Term

    T_NUMBER      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20

    Term    go to state 41
    Factor  go to state 23


State 30

   14 Expression: Expression T_MINUS . Term

    T_NUMBER      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20

    Term    go to state 42
    Factor  go to state 23


State 31

    8 VariableDeclaration: Type T_IDENTIFIER T_EQUALS Expression T_SEMICOLON .

    $default  reduce using rule 8 (VariableDeclaration)


State 32

   16 Term: Term T_TIMES . Factor

    T_NUMBER      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20

    Factor  go to state 43


State 33

   17 Term: Term T_DIVIDE . Factor

    T_NUMBER      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20

    Factor  go to state 44


State 34

   11 ReturnStatement: T_RETURN . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 19
    T_IDENTIFIER  shift, and go to state 20

    Expression  go to state 45
    Term        go to state 22
    Factor      go to state 23


State 35

    9 Block: T_CLBRACKET BlockList . T_CRBRACKET

    T_CRBRACKET  shift, and go to state 46


State 36

   10 BlockList: ReturnStatement .

    $default  reduce using rule 10 (BlockList)


State 37

    6 FunctionDeclaration: Type T_IDENTIFIER T_LBRACKET Param T_RBRACKET Block .

    $default  reduce using rule 6 (FunctionDeclaration)


State 38

   23 Param: Type T_IDENTIFIER T_COMMA . Param

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    Param  go to state 47
    Type   go to state 18


State 39

   20 Factor: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 20 (Factor)


State 40

   21 Factor: T_IDENTIFIER T_LBRACKET Param . T_RBRACKET

    T_RBRACKET  shift, and go to state 48


State 41

   13 Expression: Expression T_PLUS Term .
   16 Term: Term . T_TIMES Factor
   17     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 32
    T_DIVIDE  shift, and go to state 33

    $default  reduce using rule 13 (Expression)


State 42

   14 Expression: Expression T_MINUS Term .
   16 Term: Term . T_TIMES Factor
   17     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 32
    T_DIVIDE  shift, and go to state 33

    $default  reduce using rule 14 (Expression)


State 43

   16 Term: Term T_TIMES Factor .

    $default  reduce using rule 16 (Term)


State 44

   17 Term: Term T_DIVIDE Factor .

    $default  reduce using rule 17 (Term)


State 45

   11 ReturnStatement: T_RETURN Expression . T_SEMICOLON
   13 Expression: Expression . T_PLUS Term
   14           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 29
    T_MINUS      shift, and go to state 30
    T_SEMICOLON  shift, and go to state 49


State 46

    9 Block: T_CLBRACKET BlockList T_CRBRACKET .

    $default  reduce using rule 9 (Block)


State 47

   23 Param: Type T_IDENTIFIER T_COMMA Param .

    $default  reduce using rule 23 (Param)


State 48

   21 Factor: T_IDENTIFIER T_LBRACKET Param T_RBRACKET .

    $default  reduce using rule 21 (Factor)


State 49

   11 ReturnStatement: T_RETURN Expression T_SEMICOLON .

    $default  reduce using rule 11 (ReturnStatement)
