Nonterminals useless in grammar

   ParamVar


Terminals unused in grammar

   T_INT
   T_VOID
   T_ADD


Grammar

    0 $accept: ROOT $end

    1 ROOT: Program

    2 Program: FunctionDeclaration
    3        | Program FunctionDeclaration
    4        | VariableDeclaration

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET Block

    7 VariableDeclaration: T_TYPE T_IDENTIFIER T_SEMICOLON
    8                    | T_TYPE T_IDENTIFIER T_EQUALS Expression T_SEMICOLON

    9 Block: T_CLBRACKET ReturnStatement T_CRBRACKET

   10 ReturnStatement: T_RETURN Expression T_SEMICOLON

   11 Expression: Term
   12           | Expression T_PLUS Term
   13           | Expression T_MINUS Term

   14 Term: Factor
   15     | Term T_TIMES Factor
   16     | Term T_DIVIDE Factor

   17 Factor: T_NUMBER
   18       | T_IDENTIFIER
   19       | T_IDENTIFIER T_LBRACKET T_RBRACKET
   20       | T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET

   21 ParamRecur: Param
   22           | ParamRecur T_COMMA Param

   23 Param: T_NUMBER
   24      | T_IDENTIFIER
   25      | T_TYPE T_IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_TIMES (258) 15
T_DIVIDE (259) 16
T_PLUS (260) 12
T_MINUS (261) 13
T_LBRACKET (262) 5 6 19 20
T_RBRACKET (263) 5 6 19 20
T_CLBRACKET (264) 9
T_CRBRACKET (265) 9
T_SEMICOLON (266) 7 8 10
T_COMMA (267) 22
T_EQUALS (268) 8
T_NUMBER (269) 17 23
T_IDENTIFIER (270) 5 6 7 8 18 19 20 24 25
T_RETURN (271) 10
T_TYPE (272) 5 6 7 8 25
T_INT (273)
T_VOID (274)
T_ADD (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
ROOT (22)
    on left: 1, on right: 0
Program (23)
    on left: 2 3 4, on right: 1 3
FunctionDeclaration (24)
    on left: 5 6, on right: 2 3
VariableDeclaration (25)
    on left: 7 8, on right: 4
Block (26)
    on left: 9, on right: 5 6
ReturnStatement (27)
    on left: 10, on right: 9
Expression (28)
    on left: 11 12 13, on right: 8 10 12 13
Term (29)
    on left: 14 15 16, on right: 11 12 13 15 16
Factor (30)
    on left: 17 18 19 20, on right: 14 15 16
ParamRecur (31)
    on left: 21 22, on right: 6 20 22
Param (32)
    on left: 23 24 25, on right: 21 22


State 0

    0 $accept: . ROOT $end

    T_TYPE  shift, and go to state 1

    ROOT                 go to state 2
    Program              go to state 3
    FunctionDeclaration  go to state 4
    VariableDeclaration  go to state 5


State 1

    5 FunctionDeclaration: T_TYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE . T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET Block
    7 VariableDeclaration: T_TYPE . T_IDENTIFIER T_SEMICOLON
    8                    | T_TYPE . T_IDENTIFIER T_EQUALS Expression T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: ROOT . $end

    $end  shift, and go to state 7


State 3

    1 ROOT: Program .
    3 Program: Program . FunctionDeclaration

    T_TYPE  shift, and go to state 8

    $default  reduce using rule 1 (ROOT)

    FunctionDeclaration  go to state 9


State 4

    2 Program: FunctionDeclaration .

    $default  reduce using rule 2 (Program)


State 5

    4 Program: VariableDeclaration .

    $default  reduce using rule 4 (Program)


State 6

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER . T_LBRACKET ParamRecur T_RBRACKET Block
    7 VariableDeclaration: T_TYPE T_IDENTIFIER . T_SEMICOLON
    8                    | T_TYPE T_IDENTIFIER . T_EQUALS Expression T_SEMICOLON

    T_LBRACKET   shift, and go to state 10
    T_SEMICOLON  shift, and go to state 11
    T_EQUALS     shift, and go to state 12


State 7

    0 $accept: ROOT $end .

    $default  accept


State 8

    5 FunctionDeclaration: T_TYPE . T_IDENTIFIER T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE . T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET Block

    T_IDENTIFIER  shift, and go to state 13


State 9

    3 Program: Program FunctionDeclaration .

    $default  reduce using rule 3 (Program)


State 10

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET . T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER T_LBRACKET . ParamRecur T_RBRACKET Block

    T_RBRACKET    shift, and go to state 14
    T_NUMBER      shift, and go to state 15
    T_IDENTIFIER  shift, and go to state 16
    T_TYPE        shift, and go to state 17

    ParamRecur  go to state 18
    Param       go to state 19


State 11

    7 VariableDeclaration: T_TYPE T_IDENTIFIER T_SEMICOLON .

    $default  reduce using rule 7 (VariableDeclaration)


State 12

    8 VariableDeclaration: T_TYPE T_IDENTIFIER T_EQUALS . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 20
    T_IDENTIFIER  shift, and go to state 21

    Expression  go to state 22
    Term        go to state 23
    Factor      go to state 24


State 13

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER . T_LBRACKET T_RBRACKET Block
    6                    | T_TYPE T_IDENTIFIER . T_LBRACKET ParamRecur T_RBRACKET Block

    T_LBRACKET  shift, and go to state 10


State 14

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 25

    Block  go to state 26


State 15

   23 Param: T_NUMBER .

    $default  reduce using rule 23 (Param)


State 16

   24 Param: T_IDENTIFIER .

    $default  reduce using rule 24 (Param)


State 17

   25 Param: T_TYPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 27


State 18

    6 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET ParamRecur . T_RBRACKET Block
   22 ParamRecur: ParamRecur . T_COMMA Param

    T_RBRACKET  shift, and go to state 28
    T_COMMA     shift, and go to state 29


State 19

   21 ParamRecur: Param .

    $default  reduce using rule 21 (ParamRecur)


State 20

   17 Factor: T_NUMBER .

    $default  reduce using rule 17 (Factor)


State 21

   18 Factor: T_IDENTIFIER .
   19       | T_IDENTIFIER . T_LBRACKET T_RBRACKET
   20       | T_IDENTIFIER . T_LBRACKET ParamRecur T_RBRACKET

    T_LBRACKET  shift, and go to state 30

    $default  reduce using rule 18 (Factor)


State 22

    8 VariableDeclaration: T_TYPE T_IDENTIFIER T_EQUALS Expression . T_SEMICOLON
   12 Expression: Expression . T_PLUS Term
   13           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 31
    T_MINUS      shift, and go to state 32
    T_SEMICOLON  shift, and go to state 33


State 23

   11 Expression: Term .
   15 Term: Term . T_TIMES Factor
   16     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 34
    T_DIVIDE  shift, and go to state 35

    $default  reduce using rule 11 (Expression)


State 24

   14 Term: Factor .

    $default  reduce using rule 14 (Term)


State 25

    9 Block: T_CLBRACKET . ReturnStatement T_CRBRACKET

    T_RETURN  shift, and go to state 36

    ReturnStatement  go to state 37


State 26

    5 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET T_RBRACKET Block .

    $default  reduce using rule 5 (FunctionDeclaration)


State 27

   25 Param: T_TYPE T_IDENTIFIER .

    $default  reduce using rule 25 (Param)


State 28

    6 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET . Block

    T_CLBRACKET  shift, and go to state 25

    Block  go to state 38


State 29

   22 ParamRecur: ParamRecur T_COMMA . Param

    T_NUMBER      shift, and go to state 15
    T_IDENTIFIER  shift, and go to state 16
    T_TYPE        shift, and go to state 17

    Param  go to state 39


State 30

   19 Factor: T_IDENTIFIER T_LBRACKET . T_RBRACKET
   20       | T_IDENTIFIER T_LBRACKET . ParamRecur T_RBRACKET

    T_RBRACKET    shift, and go to state 40
    T_NUMBER      shift, and go to state 15
    T_IDENTIFIER  shift, and go to state 16
    T_TYPE        shift, and go to state 17

    ParamRecur  go to state 41
    Param       go to state 19


State 31

   12 Expression: Expression T_PLUS . Term

    T_NUMBER      shift, and go to state 20
    T_IDENTIFIER  shift, and go to state 21

    Term    go to state 42
    Factor  go to state 24


State 32

   13 Expression: Expression T_MINUS . Term

    T_NUMBER      shift, and go to state 20
    T_IDENTIFIER  shift, and go to state 21

    Term    go to state 43
    Factor  go to state 24


State 33

    8 VariableDeclaration: T_TYPE T_IDENTIFIER T_EQUALS Expression T_SEMICOLON .

    $default  reduce using rule 8 (VariableDeclaration)


State 34

   15 Term: Term T_TIMES . Factor

    T_NUMBER      shift, and go to state 20
    T_IDENTIFIER  shift, and go to state 21

    Factor  go to state 44


State 35

   16 Term: Term T_DIVIDE . Factor

    T_NUMBER      shift, and go to state 20
    T_IDENTIFIER  shift, and go to state 21

    Factor  go to state 45


State 36

   10 ReturnStatement: T_RETURN . Expression T_SEMICOLON

    T_NUMBER      shift, and go to state 20
    T_IDENTIFIER  shift, and go to state 21

    Expression  go to state 46
    Term        go to state 23
    Factor      go to state 24


State 37

    9 Block: T_CLBRACKET ReturnStatement . T_CRBRACKET

    T_CRBRACKET  shift, and go to state 47


State 38

    6 FunctionDeclaration: T_TYPE T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET Block .

    $default  reduce using rule 6 (FunctionDeclaration)


State 39

   22 ParamRecur: ParamRecur T_COMMA Param .

    $default  reduce using rule 22 (ParamRecur)


State 40

   19 Factor: T_IDENTIFIER T_LBRACKET T_RBRACKET .

    $default  reduce using rule 19 (Factor)


State 41

   20 Factor: T_IDENTIFIER T_LBRACKET ParamRecur . T_RBRACKET
   22 ParamRecur: ParamRecur . T_COMMA Param

    T_RBRACKET  shift, and go to state 48
    T_COMMA     shift, and go to state 29


State 42

   12 Expression: Expression T_PLUS Term .
   15 Term: Term . T_TIMES Factor
   16     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 34
    T_DIVIDE  shift, and go to state 35

    $default  reduce using rule 12 (Expression)


State 43

   13 Expression: Expression T_MINUS Term .
   15 Term: Term . T_TIMES Factor
   16     | Term . T_DIVIDE Factor

    T_TIMES   shift, and go to state 34
    T_DIVIDE  shift, and go to state 35

    $default  reduce using rule 13 (Expression)


State 44

   15 Term: Term T_TIMES Factor .

    $default  reduce using rule 15 (Term)


State 45

   16 Term: Term T_DIVIDE Factor .

    $default  reduce using rule 16 (Term)


State 46

   10 ReturnStatement: T_RETURN Expression . T_SEMICOLON
   12 Expression: Expression . T_PLUS Term
   13           | Expression . T_MINUS Term

    T_PLUS       shift, and go to state 31
    T_MINUS      shift, and go to state 32
    T_SEMICOLON  shift, and go to state 49


State 47

    9 Block: T_CLBRACKET ReturnStatement T_CRBRACKET .

    $default  reduce using rule 9 (Block)


State 48

   20 Factor: T_IDENTIFIER T_LBRACKET ParamRecur T_RBRACKET .

    $default  reduce using rule 20 (Factor)


State 49

   10 ReturnStatement: T_RETURN Expression T_SEMICOLON .

    $default  reduce using rule 10 (ReturnStatement)
